// Compiling subroutine  
// Compiling subroutine body  
function Main.main 2
// Compiling do  
push constant 8000
push constant 12345
call Memory.poke 2
pop temp 0
// Compiling do  
push constant 8001
push constant 16
push constant 1
neg  
call Main.fillMemory 3
pop temp 0
// Compiling let  
push constant 8000
call Memory.peek 1
// Compiling do  
push local 1
call Main.convert 1
pop temp 0
// Compiling return  
push constant 0
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function Main.convert 3
// Compiling let  
push constant 1
neg  
pop local 2
// Compiling while  
label Main.label.0 
push local 2
not  
if-goto Main.label.1 
// Compiling let  
push local 1
push constant 1
add  
pop local 1
// Compiling let  
push local 0
call Main.nextMask 1
// Compiling if  
push local 1
push constant 16
gt  
not  
not  
if-goto Main.label.3 
// Compiling if  
push argument 0
push local 0
and  
push constant 0
eq  
not  
not  
if-goto Main.label.5 
// Compiling do  
push constant 8000
push local 1
add  
push constant 1
call Memory.poke 2
pop temp 0
goto Main.label.4 
label Main.label.5 
// Compiling else  
// Compiling do  
push constant 8000
push local 1
add  
push constant 0
call Memory.poke 2
pop temp 0
label Main.label.4 
goto Main.label.2 
label Main.label.3 
// Compiling else  
// Compiling let  
push constant 0
pop local 2
label Main.label.2 
goto Main.label.0 
label Main.label.1 
// Compiling return  
push constant 0
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function Main.nextMask 0
// Compiling if  
push argument 0
push constant 0
eq  
not  
if-goto Main.label.7 
// Compiling return  
push constant 1
return  
goto Main.label.6 
label Main.label.7 
// Compiling else  
// Compiling return  
push argument 0
push constant 2
call Math.multiply 2  
return  
label Main.label.6 
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function Main.fillMemory 0
// Compiling while  
label Main.label.8 
push argument 1
push constant 0
gt  
not  
if-goto Main.label.9 
// Compiling do  
push argument 0
push argument 2
call Memory.poke 2
pop temp 0
// Compiling let  
push argument 1
push constant 1
sub  
pop argument 1
// Compiling let  
push argument 0
push constant 1
add  
pop argument 0
goto Main.label.8 
label Main.label.9 
// Compiling return  
push constant 0
return  
// End subroutine body  
// End subroutine  
