// Compiling subroutine  
// Compiling subroutine body  
function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
// Compiling let  
push argument 0
pop this 0
// Compiling let  
push argument 1
pop this 1
// Compiling let  
push argument 2
pop this 10
// Compiling let  
push argument 3
push constant 6
sub  
pop this 11
// Compiling let  
push argument 4
pop this 12
// Compiling let  
push argument 5
push constant 6
sub  
pop this 13
// Compiling let  
push constant 0
pop this 14
// Compiling do  
push pointer 0
call Ball.show 1
pop temp 0
// Compiling return  
push pointer 0
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function Ball.dispose 0
push argument 0
pop pointer 0
// Compiling do  
push pointer 0
call Memory.deAlloc 1
pop temp 0
// Compiling return  
push constant 0
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function Ball.show 0
push argument 0
pop pointer 0
// Compiling do  
push constant 1
neg  
call Screen.setColor 1
pop temp 0
// Compiling do  
push pointer 0
call Ball.draw 1
pop temp 0
// Compiling return  
push constant 0
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function Ball.hide 0
push argument 0
pop pointer 0
// Compiling do  
push constant 0
call Screen.setColor 1
pop temp 0
// Compiling do  
push pointer 0
call Ball.draw 1
pop temp 0
// Compiling return  
push constant 0
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function Ball.draw 0
push argument 0
pop pointer 0
// Compiling do  
push this 0
push this 1
push this 0
push constant 5
add  
push this 1
push constant 5
add  
call Screen.drawRectangle 4
pop temp 0
// Compiling return  
push constant 0
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function Ball.getLeft 0
push argument 0
pop pointer 0
// Compiling return  
push this 0
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function Ball.getRight 0
push argument 0
pop pointer 0
// Compiling return  
push this 0
push constant 5
add  
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function Ball.setDestination 3
push argument 0
pop pointer 0
// Compiling let  
push argument 1
push this 0
sub  
pop this 2
// Compiling let  
push argument 2
push this 1
sub  
pop this 3
// Compiling let  
push this 2
call Math.abs 1
pop local 0
// Compiling let  
push this 3
call Math.abs 1
pop local 1
// Compiling let  
push local 0
push local 1
lt  
pop this 7
// Compiling if  
push this 7
not  
if-goto Ball.label.1 
// Compiling let  
push local 0
pop local 2
// Compiling let  
push local 1
pop local 0
// Compiling let  
push local 2
pop local 1
// Compiling let  
push this 1
push argument 2
lt  
pop this 8
// Compiling let  
push this 0
push argument 1
lt  
pop this 9
goto Ball.label.0 
label Ball.label.1 
// Compiling else  
// Compiling let  
push this 0
push argument 1
lt  
pop this 8
// Compiling let  
push this 1
push argument 2
lt  
pop this 9
label Ball.label.0 
// Compiling let  
push constant 2
push local 1
call Math.multiply 2  
push local 0
sub  
pop this 4
// Compiling let  
push constant 2
push local 1
call Math.multiply 2  
pop this 5
// Compiling let  
push constant 2
push local 1
push local 0
sub  
call Math.multiply 2  
pop this 6
// Compiling return  
push constant 0
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function Ball.move 0
push argument 0
pop pointer 0
// Compiling do  
push pointer 0
call Ball.hide 1
pop temp 0
// Compiling if  
push this 4
push constant 0
lt  
not  
if-goto Ball.label.3 
// Compiling let  
push this 4
push this 5
add  
pop this 4
goto Ball.label.2 
label Ball.label.3 
// Compiling else  
// Compiling let  
push this 4
push this 6
add  
pop this 4
// Compiling if  
push this 9
not  
if-goto Ball.label.5 
// Compiling if  
push this 7
not  
if-goto Ball.label.7 
// Compiling let  
push this 0
push constant 4
add  
pop this 0
goto Ball.label.6 
label Ball.label.7 
// Compiling else  
// Compiling let  
push this 1
push constant 4
add  
pop this 1
label Ball.label.6 
goto Ball.label.4 
label Ball.label.5 
// Compiling else  
// Compiling if  
push this 7
not  
if-goto Ball.label.9 
// Compiling let  
push this 0
push constant 4
sub  
pop this 0
goto Ball.label.8 
label Ball.label.9 
// Compiling else  
// Compiling let  
push this 1
push constant 4
sub  
pop this 1
label Ball.label.8 
label Ball.label.4 
label Ball.label.2 
// Compiling if  
push this 8
not  
if-goto Ball.label.11 
// Compiling if  
push this 7
not  
if-goto Ball.label.13 
// Compiling let  
push this 1
push constant 4
add  
pop this 1
goto Ball.label.12 
label Ball.label.13 
// Compiling else  
// Compiling let  
push this 0
push constant 4
add  
pop this 0
label Ball.label.12 
goto Ball.label.10 
label Ball.label.11 
// Compiling else  
// Compiling if  
push this 7
not  
if-goto Ball.label.15 
// Compiling let  
push this 1
push constant 4
sub  
pop this 1
goto Ball.label.14 
label Ball.label.15 
// Compiling else  
// Compiling let  
push this 0
push constant 4
sub  
pop this 0
label Ball.label.14 
label Ball.label.10 
// Compiling if  
push this 0
push this 10
gt  
not  
not  
if-goto Ball.label.17 
// Compiling let  
push constant 1
pop this 14
// Compiling let  
push this 10
pop this 0
goto Ball.label.16 
label Ball.label.17 
label Ball.label.16 
// Compiling if  
push this 0
push this 11
lt  
not  
not  
if-goto Ball.label.19 
// Compiling let  
push constant 2
pop this 14
// Compiling let  
push this 11
pop this 0
goto Ball.label.18 
label Ball.label.19 
label Ball.label.18 
// Compiling if  
push this 1
push this 12
gt  
not  
not  
if-goto Ball.label.21 
// Compiling let  
push constant 3
pop this 14
// Compiling let  
push this 12
pop this 1
goto Ball.label.20 
label Ball.label.21 
label Ball.label.20 
// Compiling if  
push this 1
push this 13
lt  
not  
not  
if-goto Ball.label.23 
// Compiling let  
push constant 4
pop this 14
// Compiling let  
push this 13
pop this 1
goto Ball.label.22 
label Ball.label.23 
label Ball.label.22 
// Compiling do  
push pointer 0
call Ball.show 1
pop temp 0
// Compiling return  
push this 14
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function Ball.bounce 5
push argument 0
pop pointer 0
// Compiling let  
push this 2
push constant 10
call Math.divide 2  
pop local 2
// Compiling let  
push this 3
push constant 10
call Math.divide 2  
pop local 3
// Compiling if  
push argument 1
push constant 0
eq  
not  
if-goto Ball.label.25 
// Compiling let  
push constant 10
pop local 4
goto Ball.label.24 
label Ball.label.25 
// Compiling else  
// Compiling if  
push this 2
push constant 0
lt  
not  
push argument 1
push constant 1
eq  
and  
push this 2
push constant 0
lt  
push argument 1
push constant 1
neg  
eq  
and  
or  
not  
if-goto Ball.label.27 
// Compiling let  
push constant 20
pop local 4
goto Ball.label.26 
label Ball.label.27 
// Compiling else  
// Compiling let  
push constant 5
pop local 4
label Ball.label.26 
label Ball.label.24 
// Compiling if  
push this 14
push constant 1
eq  
not  
if-goto Ball.label.29 
// Compiling let  
push constant 506
pop local 0
// Compiling let  
push local 3
push constant 50
neg  
call Math.multiply 2  
push local 2
call Math.divide 2  
pop local 1
// Compiling let  
push this 1
push local 1
push local 4
call Math.multiply 2  
add  
pop local 1
goto Ball.label.28 
label Ball.label.29 
// Compiling else  
// Compiling if  
push this 14
push constant 2
eq  
not  
if-goto Ball.label.31 
// Compiling let  
push constant 0
pop local 0
// Compiling let  
push local 3
push constant 50
call Math.multiply 2  
push local 2
call Math.divide 2  
pop local 1
// Compiling let  
push this 1
push local 1
push local 4
call Math.multiply 2  
add  
pop local 1
goto Ball.label.30 
label Ball.label.31 
// Compiling else  
// Compiling if  
push this 14
push constant 3
eq  
not  
if-goto Ball.label.33 
// Compiling let  
push constant 250
pop local 1
// Compiling let  
push local 2
push constant 25
neg  
call Math.multiply 2  
push local 3
call Math.divide 2  
pop local 0
// Compiling let  
push this 0
push local 0
push local 4
call Math.multiply 2  
add  
pop local 0
goto Ball.label.32 
label Ball.label.33 
// Compiling else  
// Compiling let  
push constant 0
pop local 1
// Compiling let  
push local 2
push constant 25
call Math.multiply 2  
push local 3
call Math.divide 2  
pop local 0
// Compiling let  
push this 0
push local 0
push local 4
call Math.multiply 2  
add  
pop local 0
label Ball.label.32 
label Ball.label.30 
label Ball.label.28 
// Compiling do  
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
// Compiling return  
push constant 0
return  
// End subroutine body  
// End subroutine  
