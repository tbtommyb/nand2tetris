// Compiling subroutine  
// Compiling subroutine body  
function PongGame.new 0
push constant 7
call Memory.alloc 1
pop pointer 0
// Compiling do  
call Screen.clearScreen 0
pop temp 0
// Compiling let  
push constant 50
pop this 6
// Compiling let  
push constant 230
push constant 229
push this 6
push constant 7
call Bat.new 4
pop this 0
// Compiling let  
push constant 253
push constant 222
push constant 0
push constant 511
push constant 0
push constant 229
call Ball.new 6
pop this 1
// Compiling do  
push this 1
push constant 400
push constant 0
call Ball.setDestination 3
pop temp 0
// Compiling do  
push constant 0
push constant 238
push constant 511
push constant 240
call Screen.drawRectangle 4
pop temp 0
// Compiling do  
push constant 22
push constant 0
call Output.moveCursor 2
pop temp 0
// Compiling do  
push constant 10
call String.new 1
push constant 34
call String.appendChar 2
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 48
call String.appendChar 2
push constant 34
call String.appendChar 2
call Output.printString 1
pop temp 0
// Compiling let  
push constant 0
pop this 3
// Compiling let  
push constant 0
pop this 4
// Compiling let  
push constant 0
pop this 2
// Compiling let  
push constant 0
pop this 5
// Compiling return  
push pointer 0
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function PongGame.dispose 0
push argument 0
pop pointer 0
// Compiling do  
push this 0
call Bat.dispose 1
pop temp 0
// Compiling do  
push this 1
call Ball.dispose 1
pop temp 0
// Compiling do  
push pointer 0
call Memory.deAlloc 1
pop temp 0
// Compiling return  
push constant 0
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function PongGame.newInstance 0
// Compiling let  
call PongGame.new 0
pop static 0
// Compiling return  
push constant 0
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function PongGame.getInstance 0
// Compiling return  
push static 0
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function PongGame.run 1
push argument 0
pop pointer 0
// Compiling while  
label PongGame.label.0 
push this 3
not  
not  
if-goto PongGame.label.1 
// Compiling while  
label PongGame.label.2 
push local 0
push constant 0
eq  
push this 3
not  
and  
not  
if-goto PongGame.label.3 
// Compiling let  
call Keyboard.keyPressed 0
pop local 0
// Compiling do  
push this 0
call Bat.move 1
pop temp 0
// Compiling do  
push pointer 0
call PongGame.moveBall 1
pop temp 0
// Compiling do  
push constant 50
call Sys.wait 1
pop temp 0
goto PongGame.label.2 
label PongGame.label.3 
// Compiling if  
push local 0
push constant 130
eq  
not  
if-goto PongGame.label.5 
// Compiling do  
push this 0
push constant 1
call Bat.setDirection 2
pop temp 0
goto PongGame.label.4 
label PongGame.label.5 
// Compiling else  
// Compiling if  
push local 0
push constant 132
eq  
not  
if-goto PongGame.label.7 
// Compiling do  
push this 0
push constant 2
call Bat.setDirection 2
pop temp 0
goto PongGame.label.6 
label PongGame.label.7 
// Compiling else  
// Compiling if  
push local 0
push constant 140
eq  
not  
if-goto PongGame.label.9 
// Compiling let  
push constant 1
neg  
pop this 3
goto PongGame.label.8 
label PongGame.label.9 
label PongGame.label.8 
label PongGame.label.6 
label PongGame.label.4 
// Compiling while  
label PongGame.label.10 
push local 0
push constant 0
eq  
not  
push this 3
not  
and  
not  
if-goto PongGame.label.11 
// Compiling let  
call Keyboard.keyPressed 0
pop local 0
// Compiling do  
push this 0
call Bat.move 1
pop temp 0
// Compiling do  
push pointer 0
call PongGame.moveBall 1
pop temp 0
// Compiling do  
push constant 50
call Sys.wait 1
pop temp 0
goto PongGame.label.10 
label PongGame.label.11 
goto PongGame.label.0 
label PongGame.label.1 
// Compiling if  
push this 3
not  
if-goto PongGame.label.13 
// Compiling do  
push constant 10
push constant 27
call Output.moveCursor 2
pop temp 0
// Compiling do  
push constant 11
call String.new 1
push constant 34
call String.appendChar 2
push constant 71
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 34
call String.appendChar 2
call Output.printString 1
pop temp 0
goto PongGame.label.12 
label PongGame.label.13 
label PongGame.label.12 
// Compiling return  
push constant 0
return  
// End subroutine body  
// End subroutine  
// Compiling subroutine  
// Compiling subroutine body  
function PongGame.moveBall 5
push argument 0
pop pointer 0
// Compiling let  
push this 1
call Ball.move 1
pop this 2
// Compiling if  
push this 2
push constant 0
gt  
push this 2
push this 5
eq  
not  
and  
not  
if-goto PongGame.label.15 
// Compiling let  
push this 2
pop this 5
// Compiling let  
push constant 0
pop local 0
// Compiling let  
push this 0
call Bat.getLeft 1
pop local 1
// Compiling let  
push this 0
call Bat.getRight 1
pop local 2
// Compiling let  
push this 1
call Ball.getLeft 1
pop local 3
// Compiling let  
push this 1
call Ball.getRight 1
pop local 4
// Compiling if  
push this 2
push constant 4
eq  
not  
if-goto PongGame.label.17 
// Compiling let  
push local 1
push local 4
gt  
push local 2
push local 3
lt  
or  
pop this 3
// Compiling if  
push this 3
not  
not  
if-goto PongGame.label.19 
// Compiling if  
push local 4
push local 1
push constant 10
add  
lt  
not  
if-goto PongGame.label.21 
// Compiling let  
push constant 1
neg  
pop local 0
goto PongGame.label.20 
label PongGame.label.21 
// Compiling else  
// Compiling if  
push local 3
push local 2
push constant 10
sub  
gt  
not  
if-goto PongGame.label.23 
// Compiling let  
push constant 1
pop local 0
goto PongGame.label.22 
label PongGame.label.23 
label PongGame.label.22 
label PongGame.label.20 
// Compiling let  
push this 6
push constant 2
sub  
pop this 6
// Compiling do  
push this 0
push this 6
call Bat.setWidth 2
pop temp 0
// Compiling let  
push this 4
push constant 1
add  
pop this 4
// Compiling do  
push constant 22
push constant 7
call Output.moveCursor 2
pop temp 0
// Compiling do  
push this 4
call Output.printInt 1
pop temp 0
goto PongGame.label.18 
label PongGame.label.19 
label PongGame.label.18 
goto PongGame.label.16 
label PongGame.label.17 
label PongGame.label.16 
// Compiling do  
push this 1
push local 0
call Ball.bounce 2
pop temp 0
goto PongGame.label.14 
label PongGame.label.15 
label PongGame.label.14 
// Compiling return  
push constant 0
return  
// End subroutine body  
// End subroutine  
