class Paddle {
    field Point topLeft;
    field Point bottomRight;

    constructor Paddle new(int Ax, int Ay, int length, int height) {
        let topLeft = Point.new(Ax, Ay);
        let bottomRight = Point.new(Ax + length, Ay + height);

        do render(true);

        return this;
    }

    method void destroy() {
        do Memory.deAlloc(this);
        return;
    }

    method void render(bool color) {
        do Screen.setColor(color);
        do Screen.drawRectangle(topLeft.x(), topLeft.y(), bottomRight.x(), bottomRight.y());
        return;
    }

    method void moveLeft() {
        var int oldTLX, oldTLY, oldBRX, oldBRY;
        if (topLeft.x() > 1) {
            do render(false);

            let oldTLX = topLeft.x();
            let oldTLY = topLeft.y();
            let oldBRX = bottomRight.x();
            let oldBRY = bottomRight.y();

            do topLeft.destroy();
            do bottomRight.destroy();

            let topLeft = Point.new(oldTLX - 1, oldTLY);
            let bottomRight = Point.new(oldBRX - 1, oldBRY);

            do render(true);
        }

        return;
    }

    method void moveRight() {
        if (bottomRight.x() < 510) {
            do render(false);

            let topLeft = Point.new(topLeft.x() + 2, topLeft.y());
            let bottomRight = Point.new(bottomRight.x() + 2, bottomRight.y());

            do render(true);
        }

        return;
    }
}
